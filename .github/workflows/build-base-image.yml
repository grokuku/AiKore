# Nom du workflow
name: Build and Push Base Image

on:
  # Permet de lancer le workflow manuellement depuis l'onglet "Actions" de GitHub
  workflow_dispatch:
  # Se déclenche automatiquement quand on pousse des changements sur la branche 'main'
  push:
    branches:
      - main
    # MAIS UNIQUEMENT si le fichier Dockerfile.buildbase a été modifié
    paths:
      - 'Dockerfile.buildbase'

env:
  REGISTRY: ghcr.io
  # On utilise le nom que vous avez choisi : aikore-buildbase
  IMAGE_NAME: ${{ github.repository_owner }}/aikore-buildbase

jobs:
  build-and-push-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # ÉTAPE 1 : Libère de l'espace disque pour éviter les erreurs
      - name: Free Disk Space (Cleanup runner)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      # ÉTAPE 2 : Récupération de votre code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ÉTAPE 3 : Connexion au registre de conteneurs de GitHub
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ÉTAPE 4 : Mise en place de Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ÉTAPE 5 : Construction et publication de l'image de base
      - name: Build and push base Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildbase
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max